//
//  RemoteFile.swift
//  Swiftygram
//  Created by ky1vstar on 7/10/19.
//  Copyright Â© 2019 ky1vstar. All rights reserved.
//

public extension TDObject {
    /**
     Represents a remote file
     */
    struct RemoteFile: TDObjectProtocol {
        /**
         Remote file identifier; may be empty. Can be used across application restarts or even from other devices for the current user. If the ID starts with "http://" or "https://", it represents the HTTP URL of the file. TDLib is currently unable to download files if only their URL is known.-If downloadFile is called on such a file or if it is sent to a secret chat, TDLib starts a file generation process by sending updateFileGenerationStart to the client with the HTTP URL in the original_path and "#url#" as the conversion string. Clients should generate the file by downloading it to the specified location
         */
        public var id: String

        /**
         True, if the file is currently being uploaded (or a remote copy is being generated by some other means)
         */
        public var isUploadingActive: Bool

        /**
         True, if a remote copy is fully available
         */
        public var isUploadingCompleted: Bool

        /**
         Size of the remote available part of the file; 0 if unknown
         */
        public var uploadedSize: Int

        /**
         Represents a remote file

         - Parameter id: Remote file identifier; may be empty. Can be used across application restarts or even from other devices for the current user. If the ID starts with "http://" or "https://", it represents the HTTP URL of the file. TDLib is currently unable to download files if only their URL is known.-If downloadFile is called on such a file or if it is sent to a secret chat, TDLib starts a file generation process by sending updateFileGenerationStart to the client with the HTTP URL in the original_path and "#url#" as the conversion string. Clients should generate the file by downloading it to the specified location
         - Parameter isUploadingActive: True, if the file is currently being uploaded (or a remote copy is being generated by some other means)
         - Parameter isUploadingCompleted: True, if a remote copy is fully available
         - Parameter uploadedSize: Size of the remote available part of the file; 0 if unknown
         */
        public init(id: String, isUploadingActive: Bool, isUploadingCompleted: Bool, uploadedSize: Int) {
            self.id = id
            self.isUploadingActive = isUploadingActive
            self.isUploadingCompleted = isUploadingCompleted
            self.uploadedSize = uploadedSize
        }
    }
}
