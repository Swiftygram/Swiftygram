//
//  LocalFile.swift
//  Swiftygram
//  Created by ky1vstar on 7/10/19.
//  Copyright Â© 2019 ky1vstar. All rights reserved.
//

public extension TDObject {
    /**
     Represents a local file
     */
    struct LocalFile: TDObjectProtocol {
        /**
         Local path to the locally available file part; may be empty
         */
        public var path: String

        /**
         True, if it is possible to try to download or generate the file
         */
        public var canBeDownloaded: Bool

        /**
         True, if the file can be deleted
         */
        public var canBeDeleted: Bool

        /**
         True, if the file is currently being downloaded (or a local copy is being generated by some other means)
         */
        public var isDownloadingActive: Bool

        /**
         True, if the local copy is fully available
         */
        public var isDownloadingCompleted: Bool

        /**
         Download will be started from this offset. downloaded_prefix_size is calculated from this offset
         */
        public var downloadOffset: Int

        /**
         If is_downloading_completed is false, then only some prefix of the file starting from download_offset is ready to be read. downloaded_prefix_size is the size of that prefix
         */
        public var downloadedPrefixSize: Int

        /**
         Total downloaded file bytes. Should be used only for calculating download progress. The actual file size may be bigger, and some parts of it may contain garbage
         */
        public var downloadedSize: Int

        /**
         Represents a local file

         - Parameter path: Local path to the locally available file part; may be empty
         - Parameter canBeDownloaded: True, if it is possible to try to download or generate the file
         - Parameter canBeDeleted: True, if the file can be deleted
         - Parameter isDownloadingActive: True, if the file is currently being downloaded (or a local copy is being generated by some other means)
         - Parameter isDownloadingCompleted: True, if the local copy is fully available
         - Parameter downloadOffset: Download will be started from this offset. downloaded_prefix_size is calculated from this offset
         - Parameter downloadedPrefixSize: If is_downloading_completed is false, then only some prefix of the file starting from download_offset is ready to be read. downloaded_prefix_size is the size of that prefix
         - Parameter downloadedSize: Total downloaded file bytes. Should be used only for calculating download progress. The actual file size may be bigger, and some parts of it may contain garbage
         */
        public init(path: String, canBeDownloaded: Bool, canBeDeleted: Bool, isDownloadingActive: Bool, isDownloadingCompleted: Bool, downloadOffset: Int, downloadedPrefixSize: Int, downloadedSize: Int) {
            self.path = path
            self.canBeDownloaded = canBeDownloaded
            self.canBeDeleted = canBeDeleted
            self.isDownloadingActive = isDownloadingActive
            self.isDownloadingCompleted = isDownloadingCompleted
            self.downloadOffset = downloadOffset
            self.downloadedPrefixSize = downloadedPrefixSize
            self.downloadedSize = downloadedSize
        }
    }
}
